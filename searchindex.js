Search.setIndex({envversion:46,filenames:["glossary","index","reference/aft-string/aft-string","reference/aft-string/functions/aft-allocate","reference/aft-string/functions/aft-ascii-check","reference/aft-string/functions/aft-ascii-compare-alphabetic","reference/aft-string/functions/aft-ascii-digit-to-int","reference/aft-string/functions/aft-ascii-is-alphabetic","reference/aft-string/functions/aft-ascii-is-alphanumeric","reference/aft-string/functions/aft-ascii-is-lowercase","reference/aft-string/functions/aft-ascii-is-newline","reference/aft-string/functions/aft-ascii-is-numeric","reference/aft-string/functions/aft-ascii-is-space-or-tab","reference/aft-string/functions/aft-ascii-is-uppercase","reference/aft-string/functions/aft-ascii-is-whitespace","reference/aft-string/functions/aft-ascii-reverse","reference/aft-string/functions/aft-ascii-reverse-range","reference/aft-string/functions/aft-ascii-to-lowercase","reference/aft-string/functions/aft-ascii-to-lowercase-char","reference/aft-string/functions/aft-ascii-to-uppercase","reference/aft-string/functions/aft-ascii-to-uppercase-char","reference/aft-string/functions/aft-c-string-copy-string","reference/aft-string/functions/aft-c-string-copy-string-with-allocator","reference/aft-string/functions/aft-c-string-deallocate","reference/aft-string/functions/aft-c-string-deallocate-with-allocator","reference/aft-string/functions/aft-codepoint-iterator-end","reference/aft-string/functions/aft-codepoint-iterator-get-index","reference/aft-string/functions/aft-codepoint-iterator-get-string","reference/aft-string/functions/aft-codepoint-iterator-next","reference/aft-string/functions/aft-codepoint-iterator-prior","reference/aft-string/functions/aft-codepoint-iterator-set-string","reference/aft-string/functions/aft-codepoint-iterator-start","reference/aft-string/functions/aft-deallocate","reference/aft-string/functions/aft-string-add","reference/aft-string/functions/aft-string-append","reference/aft-string/functions/aft-string-append-c-string","reference/aft-string/functions/aft-string-append-char","reference/aft-string/functions/aft-string-append-slice","reference/aft-string/functions/aft-string-assign","reference/aft-string/functions/aft-string-copy","reference/aft-string/functions/aft-string-copy-c-string","reference/aft-string/functions/aft-string-copy-c-string-with-allocator","reference/aft-string/functions/aft-string-copy-slice","reference/aft-string/functions/aft-string-copy-slice-with-allocator","reference/aft-string/functions/aft-string-copy-with-allocator","reference/aft-string/functions/aft-string-destroy","reference/aft-string/functions/aft-string-get-capacity","reference/aft-string/functions/aft-string-get-contents","reference/aft-string/functions/aft-string-get-contents-const","reference/aft-string/functions/aft-string-get-count","reference/aft-string/functions/aft-string-initialise","reference/aft-string/functions/aft-string-initialise-with-allocator","reference/aft-string/functions/aft-string-range-check","reference/aft-string/functions/aft-string-remove","reference/aft-string/functions/aft-string-replace","reference/aft-string/functions/aft-string-reserve","reference/aft-string/functions/aft-string-slice","reference/aft-string/functions/aft-string-slice-count","reference/aft-string/functions/aft-string-slice-end","reference/aft-string/functions/aft-string-slice-ends-with","reference/aft-string/functions/aft-string-slice-find-first-char","reference/aft-string/functions/aft-string-slice-find-first-string","reference/aft-string/functions/aft-string-slice-find-last-char","reference/aft-string/functions/aft-string-slice-find-last-string","reference/aft-string/functions/aft-string-slice-from-buffer","reference/aft-string/functions/aft-string-slice-from-c-string","reference/aft-string/functions/aft-string-slice-from-string","reference/aft-string/functions/aft-string-slice-in-string","reference/aft-string/functions/aft-string-slice-matches","reference/aft-string/functions/aft-string-slice-remove-end","reference/aft-string/functions/aft-string-slice-remove-start","reference/aft-string/functions/aft-string-slice-start","reference/aft-string/functions/aft-string-slice-starts-with","reference/aft-string/functions/aft-string-slice-string","reference/aft-string/functions/aft-strings-match","reference/aft-string/types/aft-codepoint-iterator","reference/aft-string/types/aft-maybe-char32","reference/aft-string/types/aft-maybe-int","reference/aft-string/types/aft-maybe-string","reference/aft-string/types/aft-maybe-uint64","reference/aft-string/types/aft-memory-block","reference/aft-string/types/aft-string","reference/aft-string/types/aft-string-slice","reference/custom-memory-management","reference/index","reference/string-modification"],objects:{"":{AftCodepointIterator:[75,0,1,"c.AftCodepointIterator"],AftMaybeChar32:[76,0,1,"c.AftMaybeChar32"],AftMaybeInt:[77,0,1,"c.AftMaybeInt"],AftMaybeString:[78,0,1,"c.AftMaybeString"],AftMaybeUint64:[79,0,1,"c.AftMaybeUint64"],AftMemoryBlock:[80,0,1,"c.AftMemoryBlock"],AftString:[81,0,1,"c.AftString"],AftStringSlice:[82,0,1,"c.AftStringSlice"],aft_allocate:[3,2,1,"c.aft_allocate"],aft_ascii_check:[4,2,1,"c.aft_ascii_check"],aft_ascii_compare_alphabetic:[5,2,1,"c.aft_ascii_compare_alphabetic"],aft_ascii_digit_to_int:[6,2,1,"c.aft_ascii_digit_to_int"],aft_ascii_is_alphabetic:[7,2,1,"c.aft_ascii_is_alphabetic"],aft_ascii_is_alphanumeric:[8,2,1,"c.aft_ascii_is_alphanumeric"],aft_ascii_is_lowercase:[9,2,1,"c.aft_ascii_is_lowercase"],aft_ascii_is_newline:[10,2,1,"c.aft_ascii_is_newline"],aft_ascii_is_numeric:[11,2,1,"c.aft_ascii_is_numeric"],aft_ascii_is_space_or_tab:[12,2,1,"c.aft_ascii_is_space_or_tab"],aft_ascii_is_uppercase:[13,2,1,"c.aft_ascii_is_uppercase"],aft_ascii_is_whitespace:[14,2,1,"c.aft_ascii_is_whitespace"],aft_ascii_reverse:[15,2,1,"c.aft_ascii_reverse"],aft_ascii_reverse_range:[16,2,1,"c.aft_ascii_reverse_range"],aft_ascii_to_lowercase:[17,2,1,"c.aft_ascii_to_lowercase"],aft_ascii_to_lowercase_char:[18,2,1,"c.aft_ascii_to_lowercase_char"],aft_ascii_to_uppercase:[19,2,1,"c.aft_ascii_to_uppercase"],aft_ascii_to_uppercase_char:[20,2,1,"c.aft_ascii_to_uppercase_char"],aft_c_string_copy_string:[21,2,1,"c.aft_c_string_copy_string"],aft_c_string_copy_string_with_allocator:[22,2,1,"c.aft_c_string_copy_string_with_allocator"],aft_c_string_deallocate:[23,2,1,"c.aft_c_string_deallocate"],aft_c_string_deallocate_with_allocator:[24,2,1,"c.aft_c_string_deallocate_with_allocator"],aft_codepoint_iterator_end:[25,2,1,"c.aft_codepoint_iterator_end"],aft_codepoint_iterator_get_index:[26,2,1,"c.aft_codepoint_iterator_get_index"],aft_codepoint_iterator_get_string:[27,2,1,"c.aft_codepoint_iterator_get_string"],aft_codepoint_iterator_next:[28,2,1,"c.aft_codepoint_iterator_next"],aft_codepoint_iterator_prior:[29,2,1,"c.aft_codepoint_iterator_prior"],aft_codepoint_iterator_set_string:[30,2,1,"c.aft_codepoint_iterator_set_string"],aft_codepoint_iterator_start:[31,2,1,"c.aft_codepoint_iterator_start"],aft_deallocate:[32,2,1,"c.aft_deallocate"],aft_string_add:[33,2,1,"c.aft_string_add"],aft_string_append:[34,2,1,"c.aft_string_append"],aft_string_append_c_string:[35,2,1,"c.aft_string_append_c_string"],aft_string_append_char:[36,2,1,"c.aft_string_append_char"],aft_string_append_slice:[37,2,1,"c.aft_string_append_slice"],aft_string_assign:[38,2,1,"c.aft_string_assign"],aft_string_copy:[39,2,1,"c.aft_string_copy"],aft_string_copy_c_string:[40,2,1,"c.aft_string_copy_c_string"],aft_string_copy_c_string_with_allocator:[41,2,1,"c.aft_string_copy_c_string_with_allocator"],aft_string_copy_slice:[42,2,1,"c.aft_string_copy_slice"],aft_string_copy_slice_with_allocator:[43,2,1,"c.aft_string_copy_slice_with_allocator"],aft_string_copy_with_allocator:[44,2,1,"c.aft_string_copy_with_allocator"],aft_string_destroy:[45,2,1,"c.aft_string_destroy"],aft_string_get_capacity:[46,2,1,"c.aft_string_get_capacity"],aft_string_get_contents:[47,2,1,"c.aft_string_get_contents"],aft_string_get_contents_const:[48,2,1,"c.aft_string_get_contents_const"],aft_string_get_count:[49,2,1,"c.aft_string_get_count"],aft_string_initialise:[50,2,1,"c.aft_string_initialise"],aft_string_initialise_with_allocator:[51,2,1,"c.aft_string_initialise_with_allocator"],aft_string_range_check:[52,2,1,"c.aft_string_range_check"],aft_string_remove:[53,2,1,"c.aft_string_remove"],aft_string_replace:[54,2,1,"c.aft_string_replace"],aft_string_reserve:[55,2,1,"c.aft_string_reserve"],aft_string_slice:[56,2,1,"c.aft_string_slice"],aft_string_slice_count:[57,2,1,"c.aft_string_slice_count"],aft_string_slice_end:[58,2,1,"c.aft_string_slice_end"],aft_string_slice_ends_with:[59,2,1,"c.aft_string_slice_ends_with"],aft_string_slice_find_first_char:[60,2,1,"c.aft_string_slice_find_first_char"],aft_string_slice_find_first_string:[61,2,1,"c.aft_string_slice_find_first_string"],aft_string_slice_find_last_char:[62,2,1,"c.aft_string_slice_find_last_char"],aft_string_slice_find_last_string:[63,2,1,"c.aft_string_slice_find_last_string"],aft_string_slice_from_buffer:[64,2,1,"c.aft_string_slice_from_buffer"],aft_string_slice_from_c_string:[65,2,1,"c.aft_string_slice_from_c_string"],aft_string_slice_from_string:[66,2,1,"c.aft_string_slice_from_string"],aft_string_slice_in_string:[67,2,1,"c.aft_string_slice_in_string"],aft_string_slice_matches:[68,2,1,"c.aft_string_slice_matches"],aft_string_slice_remove_end:[69,2,1,"c.aft_string_slice_remove_end"],aft_string_slice_remove_start:[70,2,1,"c.aft_string_slice_remove_start"],aft_string_slice_start:[71,2,1,"c.aft_string_slice_start"],aft_string_slice_starts_with:[72,2,1,"c.aft_string_slice_starts_with"],aft_string_slice_string:[73,2,1,"c.aft_string_slice_string"],aft_strings_match:[74,2,1,"c.aft_strings_match"]},AftMaybeChar32:{valid:[76,1,1,"c.AftMaybeChar32.valid"],value:[76,1,1,"c.AftMaybeChar32.value"]},AftMaybeInt:{valid:[77,1,1,"c.AftMaybeInt.valid"],value:[77,1,1,"c.AftMaybeInt.value"]},AftMaybeString:{valid:[78,1,1,"c.AftMaybeString.valid"],value:[78,1,1,"c.AftMaybeString.value"]},AftMaybeUint64:{valid:[79,1,1,"c.AftMaybeUint64.valid"],value:[79,1,1,"c.AftMaybeUint64.value"]},AftMemoryBlock:{bytes:[80,1,1,"c.AftMemoryBlock.bytes"],memory:[80,1,1,"c.AftMemoryBlock.memory"]},AftString:{allocator:[81,1,1,"c.AftString.allocator"]}},objnames:{"0":["c","type","C type"],"1":["c","member","C member"],"2":["c","function","C function"]},objtypes:{"0":"c:type","1":"c:member","2":"c:function"},terms:{"byte":[0,3,16,26,33,46,47,49,52,53,54,55,56,57,58,60,61,62,63,64,69,70,71,73,80,81,82],"case":5,"char":[6,7,8,9,10,11,12,13,14,18,20,21,22,23,24,33,34,35,36,38,39,40,41,45,47,48,58,60,62,64,65,71],"const":[5,21,22,33,34,35,38,39,40,41,45,48,52,54,58,64,65,66,67,71,73,74],"default":[0,3,32,83],"import":85,"int":[5,6,16,26,33,34,35,38,39,45,46,49,52,53,54,55,56,57,64,69,70,73,77],"long":[47,48,82],"new":[],"null":[0,3,21,22,23,24,32,47,48,80,81,82],"return":[3,4,5,6,7,8,9,10,11,12,13,14,18,20,21,22,23,24,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74],"static":83,"true":[4,7,8,9,10,11,12,13,14,23,24,33,34,35,36,37,38,45,52,54,55,59,67,68,72,74,76,77,78,79],"void":[3,15,16,17,19,22,24,25,30,31,32,41,43,44,50,51,53,69,70,80,81],accord:5,ad_string_find_first_str:[],add:[34,35,36,37,83],aft_alloc:[],aft_ascii_check:[],aft_ascii_check_rang:[],aft_ascii_compare_alphabet:[],aft_ascii_digit_to_int:[],aft_ascii_is_alphabet:[],aft_ascii_is_alphanumer:[],aft_ascii_is_lowercas:[],aft_ascii_is_newlin:[],aft_ascii_is_numer:[],aft_ascii_is_space_or_tab:[],aft_ascii_is_uppercas:[],aft_ascii_is_whitespac:[],aft_ascii_revers:[],aft_ascii_reverse_rang:[],aft_ascii_to_lowercas:[],aft_ascii_to_lowercase_char:[],aft_ascii_to_uppercas:[],aft_ascii_to_uppercase_char:[],aft_ascii_uint64_from_str:[],aft_ascii_uint64_from_string_rang:[],aft_c_string_copy_str:[],aft_c_string_copy_string_with_alloc:[],aft_c_string_dealloc:[],aft_c_string_deallocate_with_alloc:[],aft_codepoint_iterator_end:[],aft_codepoint_iterator_get_index:[],aft_codepoint_iterator_get_str:[],aft_codepoint_iterator_next:[],aft_codepoint_iterator_prior:[],aft_codepoint_iterator_set_str:27,aft_codepoint_iterator_start:[],aft_dealloc:[],aft_str:[33,34,35,38,39,45,83],aft_string_add:[],aft_string_append:[],aft_string_append_c_str:[],aft_string_append_char:[],aft_string_append_slic:[],aft_string_assign:[],aft_string_copi:[],aft_string_copy_c_str:[33,34,35,39],aft_string_copy_c_string_with_alloc:[],aft_string_copy_rang:[],aft_string_copy_with_alloc:[],aft_string_destroi:[],aft_string_ends_with:[],aft_string_find_first_char:[],aft_string_find_first_str:[],aft_string_find_last_char:[],aft_string_find_last_str:[],aft_string_from_buff:[],aft_string_from_buffer_with_alloc:[],aft_string_from_c_str:[],aft_string_from_c_string_with_alloc:[],aft_string_get_capac:[],aft_string_get_cont:[],aft_string_get_contents_const:[],aft_string_get_count:[],aft_string_initialis:[],aft_string_initialise_with_alloc:[],aft_string_range_check:[],aft_string_range_count:[],aft_string_remov:[],aft_string_replac:[],aft_string_reserv:[],aft_string_slic:[],aft_string_slice_count:[],aft_string_slice_end:[],aft_string_slice_ends_with:[],aft_string_slice_find_first_char:[],aft_string_slice_find_first_str:[],aft_string_slice_find_last_char:[],aft_string_slice_find_last_str:[],aft_string_slice_from_buff:[],aft_string_slice_from_c_str:[],aft_string_slice_from_str:[],aft_string_slice_in_str:[],aft_string_slice_match:[],aft_string_slice_start:[],aft_string_slice_starts_with:[],aft_string_slice_str:[],aft_string_starts_with:[],aft_string_substr:[],aft_string_to_c_str:[],aft_string_to_c_string_with_alloc:[],aft_strings_match:[],aft_use_custom_alloc:83,aftcodepointiter:[25,26,27,28,29,30,31],after:[],afterward:85,aftmaybechar32:[28,29],aftmaybeint:[],aftmaybestr:[],aftmaybeuint64:[],aftmemoryblock:[3,32],aftstringrang:[],aftstringslic:4,alloc:0,allow:[0,52,85],alphabet:[0,5,7,8],also:[],alwai:[59,72,75],american:0,amount:[47,55],amp:[],ani:[0,17,19,45,50,51,75,81,85],anoth:[33,34,38,56],appear:5,append:[34,35,36,37],arab:0,argc:[33,34,35,38,39,45],argv:[33,34,35,38,39,45],arrai:[0,64,82],ascii:0,assign:38,associ:[22,38,39,40,41,42,43,44,45,50,51,81],assum:0,basic:81,becaus:[0,50,51,85],becom:[],befor:[5,29,33,46],begin:[61,63,72],behaviour:83,between:[],bit:0,block:[3,32,80,83],bool:[4,7,8,9,10,11,12,13,14,23,24,32,33,34,35,36,37,38,45,52,54,55,59,67,68,72,74,76,77,78,79],both:85,bound:52,buffer:[],build:83,call:[50,51,85],calloc:3,came:[],can:[0,46,47,82,83],canon:0,capac:46,carriag:[10,14],cent:33,chang:[47,83],char32_t:76,charact:[0,5,7,8,9],clone:39,code:0,common:0,commun:0,compar:5,composit:0,consid:[],consist:0,constant:82,content:[38,47,48,50,51,55,64,65,68,74,80,85],context:0,convert:[5,6,17,18,19,20],copi:[21,22,39,42,43,44],could:[50,51],count:[33,55,64,69,70],creat:[21,22,39,40,41,42,43,44,50,51,64,65,66,83],current:[28,29],custom:[0,3,32],date:34,dealloc:[21,22,23,24,32,45,50,51,83],decim:[6,8,11],declar:83,defin:[0,3,32,83,85],definit:83,describ:[3,32],design:[],desir:45,despit:0,destroi:45,detail:[],determin:[0,4,7,8,9,10,11,12,13,14,52,59,67,68,72,74],differ:[0,5],digit:[6,8,11],direct:[47,48,85],doe:29,don:[81,83],done:5,due:[],either:[76,77,78,79],electron:0,empti:[3,32,45,50,51,52,59,72,80],encod:[0,4,75,81],end:[16,25,26,28,34,35,36,37,52,53,54,56,58,59,69,73],enforc:81,ensur:83,entir:[4,30,45],entiti:[],equal:55,equival:0,exactli:[68,74],exist:[50,51],expect:[75,81],extrem:0,fail:[3,21,22],feed:[10,14],fella:[],find:[60,61,62,63],fine:[],first:[5,16,52,53,54,56,60,61,68,71,73,74],fix:[0,80],follow:[0,83],form:[0,10,14,81],formal:0,format:0,free:32,from:[3,6,32,33,34,35,36,37,38,40,41,53,54,64,65,66,69,70,83],further:[47,48,82],gener:[],get:[3,26,27,28,29,46,47,48,49,57,58,71],give:[32,38],given:[33,59,72],global:83,greater:55,growabl:81,guarante:[47,48],head:26,here:0,hold:46,home:[],implement:[3,32],includ:[33,34,35,38,39,45,83],index:[1,16,26,30,33,52,53,54,56,60,61,62,63,73],inform:0,inherit:[],initialis:[50,51],insensit:5,insert:33,instead:45,integ:[],intend:0,interchang:0,invalid:[76,77,78,79,85],isn:[47,48,82],know:0,last:[16,27,52,53,54,56,62,63,73],latin:0,leak:[50,51],letter:[5,7,8,9,13,17,18,19,20],librari:[0,83],like:[0,83],limit:46,line:[10,14],link:83,liter:[0,10,14],local:[0,83],locat:[60,61,62,63],lookup:[59,61,63,72],lowercas:[9,17,18,19,20],mai:[3,32,76,77,78,79],main:[33,34,35,38,39,45],make:[0,38],manag:[0,3,32],mani:0,match:[68,74,83],mean:[],member:81,memori:0,messag:[33,34,35,38,39,45],modif:47,modifi:47,most:0,move:[25,28,29,31],multipl:0,must:83,name:[10,14,83],need:[38,46,83],neg:5,next:28,non:[18,20],normal:[0,75,81],normliz:0,noth:[76,77,78,79],number:[3,5,6,49,55,57,64,69,70,80],numer:[0,8,11],onli:[0,47,48,81,82,83],oper:[],option:[76,77,78,79],order:[5,15,16],origin:[40,41,47,48,56,73,82],other:0,otherwis:[3,32],out:[56,73],output:[33,34,35,38,39,45],over:30,overrid:83,overwrit:38,ownership:[],page:1,pair:5,paramet:[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,83],part:67,particular:75,pass:[3,27,32,85],past:[16,26,52,53,54,56,58,73],path:[],per:83,posit:[5,27,28,29,30,75],possibl:0,prevent:[],previous:32,price:33,printf:[33,34,35,38,39,45],prior:29,produc:[],propag:[],read:81,readout:34,realloc:46,reciev:[33,34,35,36,37,38],redefin:83,refer:[],region:80,releas:32,remain:[45,47,48,82],remov:53,replac:54,repres:[6,76,77,78,79],represent:0,request:3,requir:3,reserv:55,result:[39,40,42],revers:[15,16],run:83,same:[0,5,38,50,51,52,68,74,83],search:1,second:[5,68,74],section:[0,47,48,82],see:0,sequenc:26,set:[30,83],shortcut:0,shorten:[69,70],should:[21,22,83],shown:45,signific:0,singl:0,situat:85,slash:[],slice:[4,33,42,43],some:55,sometim:0,sourc:83,space:[12,14,55],specif:0,specifi:[0,47,48,82],standard:[0,83],start:[16,29,30,31,52,53,54,56,70,71,73,75],stdio:[33,34,35,38,39,45],store:0,string:0,structur:[0,83],subset:0,substr:[61,63],tab:[10,12,14],take:[],taken:0,termin:[47,48,82],text:45,than:55,thei:0,thi:[0,3,5,32,47,48,50,51,59,72,81,82,83],thing:38,though:5,thread:83,time:83,togeth:[],transfer:[38,83],transform:0,twice:[50,51],two:[0,5,68,74],uint64_t:[3,79,80],unchang:[18,20],underli:82,unicod:0,unseen:45,unsign:[],upper:5,uppercas:[13,17,18,19,20],usabl:38,usag:0,user:[0,3,32,83],utf:[0,26,75,81],valid:[4,47,48,52,76,77,78,79,82],valu:[5,33,34,35,38,39,45,76,77,78,79],variabl:0,vertic:[10,14],wai:83,western:0,when:[0,3,28,32,59,72,76,77,78,79,81,83],where:[0,52],whether:0,which:38,width:0,within:[16,26,27,47,52,56,75,82],would:[50,51,85],zero:[0,5,33,55]},titles:["Glossary","AftString","AftString","aft_allocate","aft_ascii_check","aft_ascii_compare_alphabetic","aft_ascii_digit_to_int","aft_ascii_is_alphabetic","aft_ascii_is_alphanumeric","aft_ascii_is_lowercase","aft_ascii_is_newline","aft_ascii_is_numeric","aft_ascii_is_space_or_tab","aft_ascii_is_uppercase","aft_ascii_is_whitespace","aft_ascii_reverse","aft_ascii_reverse_range","aft_ascii_to_lowercase","aft_ascii_to_lowercase_char","aft_ascii_to_uppercase","aft_ascii_to_uppercase_char","aft_c_string_copy_string","aft_c_string_copy_string_with_allocator","aft_c_string_deallocate","aft_c_string_deallocate_with_allocator","aft_codepoint_iterator_end","aft_codepoint_iterator_get_index","aft_codepoint_iterator_get_string","aft_codepoint_iterator_next","aft_codepoint_iterator_prior","aft_codepoint_iterator_set_string","aft_codepoint_iterator_start","aft_deallocate","aft_string_add","aft_string_append","aft_string_append_c_string","aft_string_append_char","aft_string_append_slice","aft_string_assign","aft_string_copy","aft_string_copy_c_string","aft_string_copy_c_string_with_allocator","aft_string_copy_slice","aft_string_copy_slice_with_allocator","aft_string_copy_with_allocator","aft_string_destroy","aft_string_get_capacity","aft_string_get_contents","aft_string_get_contents_const","aft_string_get_count","aft_string_initialise","aft_string_initialise_with_allocator","aft_string_range_check","aft_string_remove","aft_string_replace","aft_string_reserve","aft_string_slice","aft_string_slice_count","aft_string_slice_end","aft_string_slice_ends_with","aft_string_slice_find_first_char","aft_string_slice_find_first_string","aft_string_slice_find_last_char","aft_string_slice_find_last_string","aft_string_slice_from_buffer","aft_string_slice_from_c_string","aft_string_slice_from_string","aft_string_slice_in_string","aft_string_slice_matches","aft_string_slice_remove_end","aft_string_slice_remove_start","aft_string_slice_start","aft_string_slice_starts_with","aft_string_slice_string","aft_strings_match","AftCodepointIterator","AftMaybeChar32","AftMaybeInt","AftMaybeString","AftMaybeUint64","AftMemoryBlock","AftString","AftStringSlice","Customizing Memory Management","Reference","String Modification"],titleterms:{"function":[2,85],aft_alloc:3,aft_ascii_check:4,aft_ascii_check_rang:[],aft_ascii_compare_alphabet:5,aft_ascii_digit_to_int:6,aft_ascii_is_alphabet:7,aft_ascii_is_alphanumer:8,aft_ascii_is_lowercas:9,aft_ascii_is_newlin:10,aft_ascii_is_numer:11,aft_ascii_is_space_or_tab:12,aft_ascii_is_uppercas:13,aft_ascii_is_whitespac:14,aft_ascii_revers:15,aft_ascii_reverse_rang:16,aft_ascii_to_lowercas:17,aft_ascii_to_lowercase_char:18,aft_ascii_to_uppercas:19,aft_ascii_to_uppercase_char:20,aft_ascii_uint64_from_str:[],aft_ascii_uint64_from_string_rang:[],aft_c_string_copy_str:21,aft_c_string_copy_string_with_alloc:22,aft_c_string_dealloc:23,aft_c_string_deallocate_with_alloc:24,aft_codepoint_iterator_end:25,aft_codepoint_iterator_get_index:26,aft_codepoint_iterator_get_str:27,aft_codepoint_iterator_next:28,aft_codepoint_iterator_prior:29,aft_codepoint_iterator_set_str:30,aft_codepoint_iterator_start:31,aft_dealloc:32,aft_string_add:33,aft_string_append:34,aft_string_append_c_str:35,aft_string_append_char:36,aft_string_append_slic:37,aft_string_assign:38,aft_string_copi:39,aft_string_copy_c_str:40,aft_string_copy_c_string_with_alloc:41,aft_string_copy_rang:[],aft_string_copy_slic:42,aft_string_copy_slice_with_alloc:43,aft_string_copy_with_alloc:44,aft_string_destroi:45,aft_string_ends_with:[],aft_string_find_first_char:[],aft_string_find_first_str:[],aft_string_find_last_char:[],aft_string_find_last_str:[],aft_string_from_buff:[],aft_string_from_buffer_with_alloc:[],aft_string_from_c_str:[],aft_string_from_c_string_with_alloc:[],aft_string_get_capac:46,aft_string_get_cont:47,aft_string_get_contents_const:48,aft_string_get_count:49,aft_string_initialis:50,aft_string_initialise_with_alloc:51,aft_string_range_check:52,aft_string_range_count:[],aft_string_remov:53,aft_string_replac:54,aft_string_reserv:55,aft_string_slic:56,aft_string_slice_count:57,aft_string_slice_end:58,aft_string_slice_ends_with:59,aft_string_slice_find_first_char:60,aft_string_slice_find_first_str:61,aft_string_slice_find_last_char:62,aft_string_slice_find_last_str:63,aft_string_slice_from_buff:64,aft_string_slice_from_c_str:65,aft_string_slice_from_str:66,aft_string_slice_in_str:67,aft_string_slice_match:68,aft_string_slice_remove_end:69,aft_string_slice_remove_start:70,aft_string_slice_start:71,aft_string_slice_starts_with:72,aft_string_slice_str:73,aft_string_starts_with:[],aft_string_substr:[],aft_string_to_c_str:[],aft_string_to_c_string_with_alloc:[],aft_strings_match:74,aftcodepointiter:75,aftmaybechar32:76,aftmaybeint:77,aftmaybestr:78,aftmaybeuint64:79,aftmemoryblock:80,aftstr:[1,2,81],aftstringrang:[],aftstringslic:82,alloc:[2,83],ascii:2,charact:[10,14],codepoint:2,custom:83,exampl:[33,34,35,38,39,45],glossari:0,indic:1,iter:2,manag:83,memori:[2,83],modif:85,modifi:85,newlin:10,propag:[],rang:2,refer:84,slice:2,string:[2,85],tabl:1,type:2,whitespac:14}})